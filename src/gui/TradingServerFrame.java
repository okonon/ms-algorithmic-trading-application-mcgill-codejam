package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.Timer;
import org.jfree.chart.ChartPanel;
import util.*; 

/**
 *  TradingServerFrame
 * 
 *  This is the main gui application.
 *  Run this.
 * 
 *  @author mattvertescher
 */
public class TradingServerFrame extends javax.swing.JFrame implements ActionListener {

    private StockGraph gp1, gp2, gp3, gp4;
    private TransactionHistory th; 
    private GraphData graphData; 
   
    /**
     * Creates new frame, LayoutFrame
     * 
     * @author mattvertescher
     */
    public TradingServerFrame(GraphData gd) {
        initComponents();
        
        // Set the on screen starting location of the GUI
        this.setLocation(100, 100);
        this.graphData = gd; 
        
        
        
        // Create new GraphPanels
        gp1 = new StockGraph("Exponential Moving Average", gd);
        gp2 = new StockGraph("Linear Weighted Moving Average", gd);
        gp3 = new StockGraph("Triangular Moving Average", gd);
        gp4 = new StockGraph("Simple Moving Average", gd);
        
        
        setFrameContent(graphInternalFrame1,gp1.getChartPanel());
        setFrameContent(graphInternalFrame3,gp2.getChartPanel());
        setFrameContent(graphInternalFrame2,gp3.getChartPanel());
        setFrameContent(graphInternalFrame4,gp4.getChartPanel());
       
        //graphInternalFrame1.setTitle("Strategy 1");
        
        
        sendReportMenuItem.setEnabled(false);
        
    }

    
    /**
     * Tells the graphs to update themselves
     * 
     * @author mattvertescher
     */
    private void updateGraphs() {
        
        // sync graph data, then update all graphs
        graphData.sync(); 
        
        gp1.updateAllSeries();
        gp2.updateAllSeries();
        gp3.updateAllSeries();
        gp4.updateAllSeries();
        
        setFrameContent(graphInternalFrame1,gp1.getChartPanel());
        setFrameContent(graphInternalFrame3,gp2.getChartPanel());
        setFrameContent(graphInternalFrame2,gp3.getChartPanel());
        setFrameContent(graphInternalFrame4,gp4.getChartPanel());
        
        graphInternalFrame1.updateUI();
        graphInternalFrame3.updateUI();
        graphInternalFrame2.updateUI();
        graphInternalFrame4.updateUI();
    }
  
    /**
     * Sets the content for the internal frames
     * 
     * @param f InternalFrame to set content for
     * @param p The content to set in frame
     * 
     * @author mattvertescher
     */
    private void setFrameContent(JInternalFrame f, ChartPanel p) {
        p.setVisible(true);
        p.setSize(200,300);
        f.setResizable(true);
        f.setContentPane(p);
    }
    
    /**
     * Tells the tables to update themselves
     * 
     * @author mattvertescher
     */
    public void updateTables(TableData td) {
        
       
        String s1 = stringFromTable(td.getEMATable()); 
        jTextArea1.setText(s1);
        
        String s2 = stringFromTable(td.getLWMATable()); 
        jTextArea2.setText(s2);
        
        String s3 = stringFromTable(td.getTMATable()); 
        jTextArea3.setText(s3);
        
        String s4 = stringFromTable(td.getSMATable()); 
        jTextArea4.setText(s4);
        
    }
    
    
    private String stringFromTable(String[][] tb){
        String st = "";
        for(int i = 0; i < tb.length; i++){
            st += tb[i][0] + "\t\t" + tb[i][1] + "\t\t" + tb[i][2] + "\n";
        }
        
        return st;
    }
    
    private void updateTable(JTable t, String[][] h) {
        
        
        int r = 0;
        while (h.length > r && 100 > r) {
            for (int c = 0; c < 3; c++)
                t.getModel().setValueAt(h[r][c], r, c);
            r += 1; 
        }   
        
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        graphPanel = new javax.swing.JPanel();
        graphInternalFrame1 = new javax.swing.JInternalFrame();
        graphInternalFrame3 = new javax.swing.JInternalFrame();
        graphInternalFrame2 = new javax.swing.JInternalFrame();
        graphInternalFrame4 = new javax.swing.JInternalFrame();
        schedulePanel = new javax.swing.JPanel();
        ganttPanel = new GanttSchedule();
        historyPanel5 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        startPriceFeedMenuItem = new javax.swing.JMenuItem();
        sendReportMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trading Server");
        setResizable(false);

        graphInternalFrame1.setFocusable(false);
        graphInternalFrame1.setPreferredSize(new java.awt.Dimension(300, 200));
        graphInternalFrame1.setVisible(true);

        org.jdesktop.layout.GroupLayout graphInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(graphInternalFrame1.getContentPane());
        graphInternalFrame1.getContentPane().setLayout(graphInternalFrame1Layout);
        graphInternalFrame1Layout.setHorizontalGroup(
            graphInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 528, Short.MAX_VALUE)
        );
        graphInternalFrame1Layout.setVerticalGroup(
            graphInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 281, Short.MAX_VALUE)
        );

        graphInternalFrame3.setPreferredSize(new java.awt.Dimension(500, 300));
        graphInternalFrame3.setVisible(true);

        org.jdesktop.layout.GroupLayout graphInternalFrame3Layout = new org.jdesktop.layout.GroupLayout(graphInternalFrame3.getContentPane());
        graphInternalFrame3.getContentPane().setLayout(graphInternalFrame3Layout);
        graphInternalFrame3Layout.setHorizontalGroup(
            graphInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        graphInternalFrame3Layout.setVerticalGroup(
            graphInternalFrame3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 305, Short.MAX_VALUE)
        );

        graphInternalFrame2.setPreferredSize(new java.awt.Dimension(500, 300));
        graphInternalFrame2.setVisible(true);

        org.jdesktop.layout.GroupLayout graphInternalFrame2Layout = new org.jdesktop.layout.GroupLayout(graphInternalFrame2.getContentPane());
        graphInternalFrame2.getContentPane().setLayout(graphInternalFrame2Layout);
        graphInternalFrame2Layout.setHorizontalGroup(
            graphInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        graphInternalFrame2Layout.setVerticalGroup(
            graphInternalFrame2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );

        graphInternalFrame4.setPreferredSize(new java.awt.Dimension(500, 300));
        graphInternalFrame4.setVisible(true);

        org.jdesktop.layout.GroupLayout graphInternalFrame4Layout = new org.jdesktop.layout.GroupLayout(graphInternalFrame4.getContentPane());
        graphInternalFrame4.getContentPane().setLayout(graphInternalFrame4Layout);
        graphInternalFrame4Layout.setHorizontalGroup(
            graphInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 556, Short.MAX_VALUE)
        );
        graphInternalFrame4Layout.setVerticalGroup(
            graphInternalFrame4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout graphPanelLayout = new org.jdesktop.layout.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(graphInternalFrame1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .add(graphInternalFrame3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(graphInternalFrame4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .add(graphInternalFrame2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap())
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(graphInternalFrame1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .add(graphInternalFrame2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(graphInternalFrame3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .add(graphInternalFrame4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainTabbedPane.addTab("Graphs", graphPanel);

        org.jdesktop.layout.GroupLayout ganttPanelLayout = new org.jdesktop.layout.GroupLayout(ganttPanel);
        ganttPanel.setLayout(ganttPanelLayout);
        ganttPanelLayout.setHorizontalGroup(
            ganttPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 1138, Short.MAX_VALUE)
        );
        ganttPanelLayout.setVerticalGroup(
            ganttPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 684, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout schedulePanelLayout = new org.jdesktop.layout.GroupLayout(schedulePanel);
        schedulePanel.setLayout(schedulePanelLayout);
        schedulePanelLayout.setHorizontalGroup(
            schedulePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(schedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(ganttPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        schedulePanelLayout.setVerticalGroup(
            schedulePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(schedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(ganttPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainTabbedPane.addTab("Manager Schedule", schedulePanel);

        jLayeredPane1.setBackground(new java.awt.Color(255, 0, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane1.setBounds(0, 50, 540, 270);
        jLayeredPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setText("Exponential Average Transaction History");
        jLabel1.setBounds(10, 0, 310, 16);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setText("Triangular Average Transaction History");
        jLabel3.setBounds(0, 320, 246, 16);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setText("Time                              Type                                        Price");
        jLabel7.setBounds(20, 30, 510, 16);
        jLayeredPane1.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea2.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea2);

        jScrollPane2.setBounds(0, 50, 540, 270);
        jLayeredPane2.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Linear Weighted Average Transaction History");
        jLabel2.setBounds(0, 0, 290, 16);
        jLayeredPane2.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setText("Simple Average Transaction History");
        jLabel4.setBounds(10, 320, 250, 16);
        jLayeredPane2.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setText("Time                                 Type                                        Price");
        jLabel6.setBounds(10, 350, 510, 16);
        jLayeredPane2.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setText("Time                                Type                                          Price");
        jLabel8.setBounds(10, 30, 510, 16);
        jLayeredPane2.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea3.setEnabled(false);
        jScrollPane3.setViewportView(jTextArea3);

        jScrollPane3.setBounds(0, 0, 540, 280);
        jLayeredPane3.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea4.setEnabled(false);
        jScrollPane4.setViewportView(jTextArea4);

        jScrollPane4.setBounds(0, 0, 540, 280);
        jLayeredPane4.add(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setText("Time                             Type                                        Price");

        org.jdesktop.layout.GroupLayout historyPanel5Layout = new org.jdesktop.layout.GroupLayout(historyPanel5);
        historyPanel5.setLayout(historyPanel5Layout);
        historyPanel5Layout.setHorizontalGroup(
            historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(historyPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(historyPanel5Layout.createSequentialGroup()
                        .add(historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 547, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 510, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLayeredPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 547, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(historyPanel5Layout.createSequentialGroup()
                        .add(jLayeredPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 547, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLayeredPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 547, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        historyPanel5Layout.setVerticalGroup(
            historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(historyPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLayeredPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 366, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(historyPanel5Layout.createSequentialGroup()
                        .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 341, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel5)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(historyPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLayeredPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .add(jLayeredPane4))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Transaction History", historyPanel5);

        org.jdesktop.layout.GroupLayout mainPanelLayout = new org.jdesktop.layout.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainTabbedPane)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, mainTabbedPane)
        );

        jMenu1.setText("MSET");

        startPriceFeedMenuItem.setText("Start Price Feed");
        startPriceFeedMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPriceFeedMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(startPriceFeedMenuItem);

        sendReportMenuItem.setText("Send Report");
        sendReportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendReportMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(sendReportMenuItem);

        menuBar.add(jMenu1);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public javax.swing.JMenuItem getStartPriceFeedButton(){
        return startPriceFeedMenuItem; 
    }
    
    private void startPriceFeedMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPriceFeedMenuItemActionPerformed
        
        updateGraphs();        
        int speed = 50
                , pause = 0;
        Timer timer = new Timer(speed, this);
        timer.setInitialDelay(pause);
        timer.start();
        
    }//GEN-LAST:event_startPriceFeedMenuItemActionPerformed

  
    public javax.swing.JMenuItem getsendReportButton(){
        return sendReportMenuItem; 
    }
    
    private void sendReportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendReportMenuItemActionPerformed
        
        
        // CONVERT JSON TO PDF HERE
        
        
        
    }//GEN-LAST:event_sendReportMenuItemActionPerformed

    /**
     * Timer Action 
     * 
     * @param e ActionEvent
     * 
     * @author mattvertescher
     */
    public void actionPerformed(ActionEvent e) {
        //System.out.println("Timer");
        updateGraphs();
    }
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ganttPanel;
    private javax.swing.JInternalFrame graphInternalFrame1;
    private javax.swing.JInternalFrame graphInternalFrame2;
    private javax.swing.JInternalFrame graphInternalFrame3;
    private javax.swing.JInternalFrame graphInternalFrame4;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JPanel historyPanel5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel schedulePanel;
    private javax.swing.JMenuItem sendReportMenuItem;
    private javax.swing.JMenuItem startPriceFeedMenuItem;
    // End of variables declaration//GEN-END:variables
}
